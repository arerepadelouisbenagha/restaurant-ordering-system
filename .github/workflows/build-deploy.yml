name: Build Restaurant Application
on:
  push:
    branches:
      - feature/*

    paths:
        - .github/workflows/build-deploy.yml

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Set Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Install and configure kubectl
      run: |
        curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.23.7/2022-06-29/bin/linux/amd64/kubectl
        curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.23.7/2022-06-29/bin/linux/arm64/kubectl
        chmod +x ./kubectl
        mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
        echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc

    - name: Install and configure eksctl
      run: |
        curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
        sudo mv /tmp/eksctl /usr/local/bin

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build backend Docker image
      run: |
        cd backend/
        docker build -f Dockerfile -t public.ecr.aws/w8m9e4i1/foodapp-backend:v1 .

    - name: Build frontend Docker image
      run: |
        cd frontend/
        docker build -f Dockerfile -t public.ecr.aws/w8m9e4i1/foodapp-frontend:v1 .

    # - name: Create ECR repository
    #   run: |
    #     aws ecr create-repository --repository-name foodapp-frontend --image-scanning-configuration scanOnPush=true --public
    #     aws ecr create-repository --repository-name foodapp-backend --image-scanning-configuration scanOnPush=true --public

    - name: Login to Amazon ECR       
      id: login-ecr
      run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/w8m9e4i1

    - name: Create Eks cluster with eksctl command
      run:  eksctl create cluster --name restaurant-app --nodes 2 --node-type t3.medium --nodes-max 3

    - name: Push images
      run: |
        docker push public.ecr.aws/w8m9e4i1/foodapp-frontend:v1
        docker push public.ecr.aws/w8m9e4i1/foodapp-backend:v1
  
    - name: Update config
      run: aws eks --region us-east-1 update-kubeconfig --name restaurant-app

    - name: Create namespace
      run: kubectl create namespace food-app-ns

    - name: Deploy to EKS
      run: |
        kubectl apply -f k8s/deployments.yml
        kubectl apply -f k8s/services.yml

    - name: sleep for 60s
      run: sleep 60

    - name: Get deployment 
      run: kubectl get deployments -n food-app-ns

    - name: Get service 
      run: kubectl get services -n food-app-ns